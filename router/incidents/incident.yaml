openapi: 3.0.0

info:
    title: Incident Management API
    description: API for incident test
    version: 0.0.1
    license:
        name: MIT
    x-oapi-codegen-type-mappings:
        uuid: github.com/google/uuid.UUID


servers:
    - url: http://localhost:8999/api/v1

paths:

    /incidents:

        # GET /api/v1/incidents
        get:
            summary: get all incidents
            description: list all available incidents
            operationId: fetchIncidents
            security:
                - BearerAuth: []
            tags:
                - incident
            responses:
                "200":
                    description: List of incidents
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Incident'
                "401":
                    $ref: '#/components/responses/UnauthorizedAccessError'
                "500":
                    $ref: '#/components/responses/InternalServerError'

        # POST /api/v1/incidents
        post:
            summary: Create a new incident
            description: create a new incident with metadata
            operationId: createNewIncident
            security:
                - BearerAuth: []
            tags:
                - incident
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Incident'
            responses:
                "201":
                    description: Incident created successfully
                "400":
                    $ref: '#/components/responses/BadRequestError'
                "401":
                    $ref: '#/components/responses/UnauthorizedAccessError'
                "500":
                    $ref: '#/components/responses/InternalServerError'


    /incidents/{id}:

        # GET /api/v1/incidents/{id}
        get:
            summary: get one incident
            description: fetch one incident by its id
            operationId: fetchIncidentByID
            security:
                - BearerAuth: []
            tags:
                - incident
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: Incident found
                    content:
                        application/json:
                            $ref: '#/components/schemas/Incident'

                "401":
                    $ref: '#/components/responses/UnauthorizedAccessError'
                "404":
                    $ref: '#/components/responses/NotFoundError'
                "500":
                    $ref: '#/components/responses/InternalServerError'


        # PUT /api/v1/incidents/{id}
        put:
            summary: Update an incident
            operationId: updateIncident
            security:
                - BearerAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint64
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Incident'
            responses:
                "200":
                    description: Incident updated
                "400":
                    $ref: '#/components/responses/BadRequestError'
                "401":
                    $ref: '#/components/responses/UnauthorizedAccessError'
                "404":
                    $ref: '#/components/responses/NotFoundError'
                "500":
                    $ref: '#/components/responses/InternalServerError'

        # # DELETE /api/v1/incidents/{id}
        # delete:

components:
    securitySchemes:
        BearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT

    responses:
        InternalServerError:
            description: Internal server error

        BadRequestError:
            description: Invalid input, bad request

        UnauthorizedAccessError:
            description: Unauthorized access

        NotFoundError:
            description: Resource not found

        ConflictError:
            description: Conflict with the current server state

    schemas:
        Incident:
            type: object
            x-go-type: models.IncidentReq
            x-go-type-import:
                name: models
                path: github.com/Dhar01/incident_resp/internal/model
            required:
                - title
                - status
                - severity
                - assigned_to
            properties:
                title:
                    type: string
                    example: "Server Down"
                description:
                    type: string
                    example: "The production server is unreachable"
                status:
                    $ref: "#/components/schemas/StatusType"
                severity:
                    $ref: "#/components/schemas/SeverityType"
                assigned_to:
                    type: integer
                    format: uint64
                    example: 101

        StatusType:
            type: string
            enum:
                - open
                - acknowledged
                - closed

        SeverityType:
            type: string
            enum:
                - low
                - medium
                - high
                - critical
